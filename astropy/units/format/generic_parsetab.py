# Licensed under a 3-clause BSD style license - see LICENSE.rst
from __future__ import (absolute_import, division, print_function, unicode_literals)


# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'A63D4C561E2ED1A045DB279536CAFDDA'
    
_lr_action_items = {'CARET':([8,19,42,47,],[26,26,26,26,]),'SOLIDUS':([0,3,4,5,6,8,9,10,14,16,17,19,20,22,23,31,32,33,34,35,36,39,40,45,48,49,50,51,56,57,59,63,65,67,68,71,72,73,74,75,76,78,79,81,],[1,-14,-33,-12,1,-37,1,-31,-32,-17,-15,-20,-16,-53,-52,-36,1,-46,-47,-12,1,-30,1,-21,-11,-34,-35,-38,-12,1,-29,-18,-26,-22,-27,-23,1,-39,-55,-19,-51,-28,-24,-25,]),'STAR':([3,4,8,9,10,14,16,17,19,20,22,23,31,45,49,50,51,63,65,67,68,71,73,74,75,76,78,79,81,],[-14,-33,-37,33,33,-32,-17,-15,-20,-16,-53,-52,-36,-21,-34,-35,-38,-18,-26,-22,-27,-23,-39,-55,-19,-51,-28,-24,-25,]),'DOUBLE_STAR':([8,19,42,47,],[28,28,28,28,]),'PERIOD':([3,4,8,9,10,14,16,17,19,20,22,23,31,45,49,50,51,63,65,67,68,71,73,74,75,76,78,79,81,],[-14,-33,-37,34,34,-32,-17,-15,-20,-16,-53,-52,-36,-21,-34,-35,-38,-18,-26,-22,-27,-23,-39,-55,-19,-51,-28,-24,-25,]),'FUNCNAME':([0,1,3,4,7,8,9,10,14,15,16,17,19,20,22,23,24,31,32,33,34,38,40,45,49,50,51,63,65,67,68,71,73,74,75,76,78,79,81,],[21,-48,-14,-33,21,-37,21,21,-32,21,-17,-15,-20,-16,-53,-52,21,-36,21,-46,-47,21,21,-21,-34,-35,-38,-18,-26,-22,-27,-23,-39,-55,-19,-51,-28,-24,-25,]),'OPEN_PAREN':([0,1,3,4,7,8,9,10,13,14,15,16,17,19,20,21,22,23,24,26,27,28,31,32,33,34,38,40,43,45,49,50,51,61,63,65,67,68,70,71,73,74,75,76,78,79,81,],[7,-48,-14,-33,7,30,7,7,40,-32,7,-17,-15,46,-16,-54,-53,-52,7,-50,30,-49,-36,7,-46,-47,7,7,66,-21,-34,-35,-38,30,-18,-26,-22,-27,30,-23,-39,-55,-19,-51,-28,-24,-25,]),'UINT':([0,1,2,8,16,18,19,22,23,26,27,28,29,30,40,43,44,54,61,62,64,66,70,80,82,],[19,-48,23,-45,42,-44,47,-53,-52,-50,-45,-49,51,-45,19,-45,68,72,-45,76,76,-45,-45,-45,83,]),'CLOSE_PAREN':([3,4,5,6,8,9,10,12,14,16,17,19,20,22,23,25,31,35,36,37,39,41,45,48,49,50,51,52,53,55,56,57,58,59,60,63,65,67,68,69,71,72,73,74,75,76,77,78,79,81,83,],[-14,-33,-1,-4,-37,-10,-31,-7,-32,-17,-15,-20,-16,-53,-52,49,-36,-2,-5,-8,-30,-13,-21,-11,-34,-35,-38,-42,-41,73,-3,-6,-9,-29,74,-18,-26,-22,-27,78,-23,-40,-39,-55,-19,-51,81,-28,-24,-25,-43,]),'SIGN':([0,1,8,19,26,27,28,30,40,42,43,46,47,61,66,70,80,],[18,-48,18,44,-50,18,-49,18,18,62,64,62,62,18,64,18,18,]),'$end':([3,4,5,6,8,9,10,11,12,14,16,17,19,20,22,23,31,35,36,37,39,41,45,48,49,50,51,56,57,58,59,63,65,67,68,71,73,74,75,76,78,79,81,],[-14,-33,-1,-4,-37,-10,-31,0,-7,-32,-17,-15,-20,-16,-53,-52,-36,-2,-5,-8,-30,-13,-21,-11,-34,-35,-38,-3,-6,-9,-29,-18,-26,-22,-27,-23,-39,-55,-19,-51,-28,-24,-25,]),'UNIT':([0,1,3,4,7,8,9,10,14,15,16,17,19,20,22,23,24,31,32,33,34,38,40,45,49,50,51,63,65,67,68,71,73,74,75,76,78,79,81,],[8,-48,-14,-33,8,-37,8,8,-32,8,-17,-15,-20,-16,-53,-52,8,-36,8,-46,-47,8,8,-21,-34,-35,-38,-18,-26,-22,-27,-23,-39,-55,-19,-51,-28,-24,-25,]),'UFLOAT':([0,2,18,30,40,54,64,66,],[-45,22,-44,-45,-45,22,-44,-45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,7,9,10,15,24,32,38,40,],[14,14,14,14,14,14,14,14,14,]),'division':([0,6,9,32,36,40,57,72,],[15,24,15,15,24,15,24,80,]),'product':([9,10,],[32,38,]),'frac':([30,66,],[52,52,]),'factor_int':([0,40,],[20,20,]),'power':([8,19,42,47,],[27,43,61,70,]),'unit_with_power':([0,7,9,10,15,24,32,38,40,],[4,4,4,4,4,4,4,4,4,]),'signed_float':([0,30,40,66,],[16,53,16,53,]),'product_of_units':([0,7,9,10,24,32,38,40,],[5,25,35,39,48,56,59,5,]),'factor_float':([0,40,],[17,17,]),'sign':([0,8,27,30,40,43,61,66,70,80,],[2,29,29,54,2,29,29,54,29,82,]),'signed_int':([19,42,43,46,47,66,],[45,63,65,69,71,77,]),'division_product_of_units':([0,9,32,40,],[6,36,57,6,]),'factor_fits':([0,40,],[3,3,]),'factor':([0,40,],[9,9,]),'unit_expression':([0,7,9,10,15,24,32,38,40,],[10,10,10,10,41,10,10,10,10,]),'numeric_power':([8,27,43,61,70,],[31,50,67,75,79,]),'main':([0,40,],[11,60,]),'paren_expr':([30,66,],[55,55,]),'inverse_unit':([0,9,32,40,],[12,37,58,12,]),'function_name':([0,7,9,10,15,24,32,38,40,],[13,13,13,13,13,13,13,13,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> product_of_units','main',1,'p_main','generic.py',153),
  ('main -> factor product_of_units','main',2,'p_main','generic.py',154),
  ('main -> factor product product_of_units','main',3,'p_main','generic.py',155),
  ('main -> division_product_of_units','main',1,'p_main','generic.py',156),
  ('main -> factor division_product_of_units','main',2,'p_main','generic.py',157),
  ('main -> factor product division_product_of_units','main',3,'p_main','generic.py',158),
  ('main -> inverse_unit','main',1,'p_main','generic.py',159),
  ('main -> factor inverse_unit','main',2,'p_main','generic.py',160),
  ('main -> factor product inverse_unit','main',3,'p_main','generic.py',161),
  ('main -> factor','main',1,'p_main','generic.py',162),
  ('division_product_of_units -> division_product_of_units division product_of_units','division_product_of_units',3,'p_division_product_of_units','generic.py',174),
  ('division_product_of_units -> product_of_units','division_product_of_units',1,'p_division_product_of_units','generic.py',175),
  ('inverse_unit -> division unit_expression','inverse_unit',2,'p_inverse_unit','generic.py',185),
  ('factor -> factor_fits','factor',1,'p_factor','generic.py',191),
  ('factor -> factor_float','factor',1,'p_factor','generic.py',192),
  ('factor -> factor_int','factor',1,'p_factor','generic.py',193),
  ('factor_float -> signed_float','factor_float',1,'p_factor_float','generic.py',199),
  ('factor_float -> signed_float UINT signed_int','factor_float',3,'p_factor_float','generic.py',200),
  ('factor_float -> signed_float UINT power numeric_power','factor_float',4,'p_factor_float','generic.py',201),
  ('factor_int -> UINT','factor_int',1,'p_factor_int','generic.py',214),
  ('factor_int -> UINT signed_int','factor_int',2,'p_factor_int','generic.py',215),
  ('factor_int -> UINT power numeric_power','factor_int',3,'p_factor_int','generic.py',216),
  ('factor_int -> UINT UINT signed_int','factor_int',3,'p_factor_int','generic.py',217),
  ('factor_int -> UINT UINT power numeric_power','factor_int',4,'p_factor_int','generic.py',218),
  ('factor_fits -> UINT power OPEN_PAREN signed_int CLOSE_PAREN','factor_fits',5,'p_factor_fits','generic.py',236),
  ('factor_fits -> UINT power signed_int','factor_fits',3,'p_factor_fits','generic.py',237),
  ('factor_fits -> UINT SIGN UINT','factor_fits',3,'p_factor_fits','generic.py',238),
  ('factor_fits -> UINT OPEN_PAREN signed_int CLOSE_PAREN','factor_fits',4,'p_factor_fits','generic.py',239),
  ('product_of_units -> unit_expression product product_of_units','product_of_units',3,'p_product_of_units','generic.py',258),
  ('product_of_units -> unit_expression product_of_units','product_of_units',2,'p_product_of_units','generic.py',259),
  ('product_of_units -> unit_expression','product_of_units',1,'p_product_of_units','generic.py',260),
  ('unit_expression -> function','unit_expression',1,'p_unit_expression','generic.py',271),
  ('unit_expression -> unit_with_power','unit_expression',1,'p_unit_expression','generic.py',272),
  ('unit_expression -> OPEN_PAREN product_of_units CLOSE_PAREN','unit_expression',3,'p_unit_expression','generic.py',273),
  ('unit_with_power -> UNIT power numeric_power','unit_with_power',3,'p_unit_with_power','generic.py',282),
  ('unit_with_power -> UNIT numeric_power','unit_with_power',2,'p_unit_with_power','generic.py',283),
  ('unit_with_power -> UNIT','unit_with_power',1,'p_unit_with_power','generic.py',284),
  ('numeric_power -> sign UINT','numeric_power',2,'p_numeric_power','generic.py',295),
  ('numeric_power -> OPEN_PAREN paren_expr CLOSE_PAREN','numeric_power',3,'p_numeric_power','generic.py',296),
  ('paren_expr -> sign UINT','paren_expr',2,'p_paren_expr','generic.py',305),
  ('paren_expr -> signed_float','paren_expr',1,'p_paren_expr','generic.py',306),
  ('paren_expr -> frac','paren_expr',1,'p_paren_expr','generic.py',307),
  ('frac -> sign UINT division sign UINT','frac',5,'p_frac','generic.py',316),
  ('sign -> SIGN','sign',1,'p_sign','generic.py',322),
  ('sign -> <empty>','sign',0,'p_sign','generic.py',323),
  ('product -> STAR','product',1,'p_product','generic.py',332),
  ('product -> PERIOD','product',1,'p_product','generic.py',333),
  ('division -> SOLIDUS','division',1,'p_division','generic.py',339),
  ('power -> DOUBLE_STAR','power',1,'p_power','generic.py',345),
  ('power -> CARET','power',1,'p_power','generic.py',346),
  ('signed_int -> SIGN UINT','signed_int',2,'p_signed_int','generic.py',352),
  ('signed_float -> sign UINT','signed_float',2,'p_signed_float','generic.py',358),
  ('signed_float -> sign UFLOAT','signed_float',2,'p_signed_float','generic.py',359),
  ('function_name -> FUNCNAME','function_name',1,'p_function_name','generic.py',365),
  ('function -> function_name OPEN_PAREN main CLOSE_PAREN','function',4,'p_function','generic.py',371),
]
