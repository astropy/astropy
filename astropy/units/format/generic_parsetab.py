from __future__ import absolute_import, division, print_function, unicode_literals

# astropy/units/format/generic_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = b'\xac\x0e4\xcc\xf8@\xe9u\x05I\xac\x9dB\xb3\xb6\x0c'

_lr_action_items = {'CARET':([17,18,34,40,],[35,35,35,35,]),'SOLIDUS':([0,3,4,7,8,12,14,15,17,18,19,21,22,25,31,39,44,46,47,50,51,52,54,55,56,61,62,63,64,65,],[1,-23,1,1,-21,-22,-11,-9,-14,-27,-10,-43,-42,1,-20,-15,-26,-24,-19,-12,-16,-41,-17,-25,-28,-45,-13,-18,1,-29,]),'STAR':([3,8,12,18,44,46,55,56,61,65,],[-23,29,-22,-27,-26,-24,-25,-28,-45,-29,]),'DOUBLE_STAR':([17,18,34,40,],[37,37,37,37,]),'PERIOD':([3,8,12,18,44,46,55,56,61,65,],[-23,30,-22,-27,-26,-24,-25,-28,-45,-29,]),'SQRT':([0,1,3,6,7,8,12,13,14,15,17,18,19,21,22,23,28,29,30,32,39,44,46,50,51,52,54,55,56,61,62,63,65,],[20,-38,-23,20,20,20,-22,20,-11,-9,-14,-27,-10,-43,-42,20,20,-36,-37,20,-15,-26,-24,-12,-16,-41,-17,-25,-28,-45,-13,-18,-29,]),'SIGN':([0,1,17,18,34,35,36,37,40,41,43,49,53,66,],[16,-38,38,16,38,-40,16,-39,38,16,16,16,16,16,]),'OPEN_PAREN':([0,1,3,6,7,8,11,12,13,14,15,17,18,19,20,21,22,23,28,29,30,32,35,36,37,39,41,44,46,49,50,51,52,53,54,55,56,61,62,63,65,],[6,-38,-23,6,6,6,32,-22,6,-11,-9,-14,43,-10,-44,-43,-42,6,6,-36,-37,6,-40,43,-39,-15,43,-26,-24,43,-12,-16,-41,43,-17,-25,-28,-45,-13,-18,-29,]),'UINT':([0,1,2,14,16,17,18,21,22,35,36,37,38,41,42,43,49,53,59,66,67,],[17,-38,22,34,-34,40,-35,-43,-42,-40,-35,-39,52,-35,56,-35,-35,-35,64,-35,68,]),'CLOSE_PAREN':([3,8,12,18,21,24,31,44,46,47,48,55,56,57,58,60,61,64,65,68,],[-23,-21,-22,-27,-43,46,-20,-26,-24,-19,61,-25,-28,-32,-31,65,-45,-30,-29,-33,]),'$end':([3,4,5,8,9,10,12,18,25,26,27,31,33,44,45,46,47,55,56,61,65,],[-23,-1,-3,-21,0,-5,-22,-27,-2,-4,-6,-20,-8,-26,-7,-24,-19,-25,-28,-45,-29,]),'UNIT':([0,1,3,6,7,8,12,13,14,15,17,18,19,21,22,23,28,29,30,32,39,44,46,50,51,52,54,55,56,61,62,63,65,],[18,-38,-23,18,18,18,-22,18,-11,-9,-14,-27,-10,-43,-42,18,18,-36,-37,18,-15,-26,-24,-12,-16,-41,-17,-25,-28,-45,-13,-18,-29,]),'UFLOAT':([0,2,16,43,59,],[-35,21,-34,-35,21,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,6,7,8,13,23,28,32,],[12,12,12,12,12,12,12,12,]),'division':([0,4,7,25,64,],[13,23,13,23,66,]),'product':([8,],[28,]),'frac':([43,],[57,]),'factor_int':([0,],[19,]),'power':([17,18,34,40,],[36,41,49,53,]),'unit_with_power':([0,6,7,8,13,23,28,32,],[3,3,3,3,3,3,3,3,]),'signed_float':([0,43,],[14,58,]),'product_of_units':([0,6,7,8,28,],[4,24,25,31,47,]),'factor_float':([0,],[15,]),'sign':([0,18,36,41,43,49,53,66,],[2,42,42,42,59,42,42,67,]),'signed_int':([17,34,40,],[39,50,54,]),'division_product_of_units':([0,7,],[5,26,]),'factor':([0,],[7,]),'unit_expression':([0,6,7,8,13,23,28,32,],[8,8,8,8,33,45,8,48,]),'numeric_power':([18,36,41,49,53,],[44,51,55,62,63,]),'main':([0,],[9,]),'paren_expr':([43,],[60,]),'inverse_unit':([0,7,],[10,27,]),'function_name':([0,6,7,8,13,23,28,32,],[11,11,11,11,11,11,11,11,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> product_of_units','main',1,'p_main','astropy/units/format/generic.py',125),
  ('main -> factor product_of_units','main',2,'p_main','astropy/units/format/generic.py',126),
  ('main -> division_product_of_units','main',1,'p_main','astropy/units/format/generic.py',127),
  ('main -> factor division_product_of_units','main',2,'p_main','astropy/units/format/generic.py',128),
  ('main -> inverse_unit','main',1,'p_main','astropy/units/format/generic.py',129),
  ('main -> factor inverse_unit','main',2,'p_main','astropy/units/format/generic.py',130),
  ('division_product_of_units -> product_of_units division unit_expression','division_product_of_units',3,'p_division_product_of_units','astropy/units/format/generic.py',140),
  ('inverse_unit -> division unit_expression','inverse_unit',2,'p_inverse_unit','astropy/units/format/generic.py',147),
  ('factor -> factor_float','factor',1,'p_factor','astropy/units/format/generic.py',153),
  ('factor -> factor_int','factor',1,'p_factor','astropy/units/format/generic.py',154),
  ('factor_float -> signed_float','factor_float',1,'p_factor_float','astropy/units/format/generic.py',160),
  ('factor_float -> signed_float UINT signed_int','factor_float',3,'p_factor_float','astropy/units/format/generic.py',161),
  ('factor_float -> signed_float UINT power numeric_power','factor_float',4,'p_factor_float','astropy/units/format/generic.py',162),
  ('factor_int -> UINT','factor_int',1,'p_factor_int','astropy/units/format/generic.py',173),
  ('factor_int -> UINT signed_int','factor_int',2,'p_factor_int','astropy/units/format/generic.py',174),
  ('factor_int -> UINT power numeric_power','factor_int',3,'p_factor_int','astropy/units/format/generic.py',175),
  ('factor_int -> UINT UINT signed_int','factor_int',3,'p_factor_int','astropy/units/format/generic.py',176),
  ('factor_int -> UINT UINT power numeric_power','factor_int',4,'p_factor_int','astropy/units/format/generic.py',177),
  ('product_of_units -> unit_expression product product_of_units','product_of_units',3,'p_product_of_units','astropy/units/format/generic.py',193),
  ('product_of_units -> unit_expression product_of_units','product_of_units',2,'p_product_of_units','astropy/units/format/generic.py',194),
  ('product_of_units -> unit_expression','product_of_units',1,'p_product_of_units','astropy/units/format/generic.py',195),
  ('unit_expression -> function','unit_expression',1,'p_unit_expression','astropy/units/format/generic.py',206),
  ('unit_expression -> unit_with_power','unit_expression',1,'p_unit_expression','astropy/units/format/generic.py',207),
  ('unit_expression -> OPEN_PAREN product_of_units CLOSE_PAREN','unit_expression',3,'p_unit_expression','astropy/units/format/generic.py',208),
  ('unit_with_power -> UNIT power numeric_power','unit_with_power',3,'p_unit_with_power','astropy/units/format/generic.py',217),
  ('unit_with_power -> UNIT numeric_power','unit_with_power',2,'p_unit_with_power','astropy/units/format/generic.py',218),
  ('unit_with_power -> UNIT','unit_with_power',1,'p_unit_with_power','astropy/units/format/generic.py',219),
  ('numeric_power -> sign UINT','numeric_power',2,'p_numeric_power','astropy/units/format/generic.py',230),
  ('numeric_power -> OPEN_PAREN paren_expr CLOSE_PAREN','numeric_power',3,'p_numeric_power','astropy/units/format/generic.py',231),
  ('paren_expr -> sign UINT','paren_expr',2,'p_paren_expr','astropy/units/format/generic.py',240),
  ('paren_expr -> signed_float','paren_expr',1,'p_paren_expr','astropy/units/format/generic.py',241),
  ('paren_expr -> frac','paren_expr',1,'p_paren_expr','astropy/units/format/generic.py',242),
  ('frac -> sign UINT division sign UINT','frac',5,'p_frac','astropy/units/format/generic.py',251),
  ('sign -> SIGN','sign',1,'p_sign','astropy/units/format/generic.py',257),
  ('sign -> <empty>','sign',0,'p_sign','astropy/units/format/generic.py',258),
  ('product -> STAR','product',1,'p_product','astropy/units/format/generic.py',267),
  ('product -> PERIOD','product',1,'p_product','astropy/units/format/generic.py',268),
  ('division -> SOLIDUS','division',1,'p_division','astropy/units/format/generic.py',274),
  ('power -> DOUBLE_STAR','power',1,'p_power','astropy/units/format/generic.py',280),
  ('power -> CARET','power',1,'p_power','astropy/units/format/generic.py',281),
  ('signed_int -> SIGN UINT','signed_int',2,'p_signed_int','astropy/units/format/generic.py',287),
  ('signed_float -> sign UINT','signed_float',2,'p_signed_float','astropy/units/format/generic.py',293),
  ('signed_float -> sign UFLOAT','signed_float',2,'p_signed_float','astropy/units/format/generic.py',294),
  ('function_name -> SQRT','function_name',1,'p_function_name','astropy/units/format/generic.py',300),
  ('function -> function_name OPEN_PAREN unit_expression CLOSE_PAREN','function',4,'p_function','astropy/units/format/generic.py',306),
]
