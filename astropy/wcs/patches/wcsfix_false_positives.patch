Index: C/wcsfix.c
===================================================================
--- C/wcsfix.c
+++ C/wcsfix.c
@@ -224,6 +224,7 @@ int datfix(struct wcsprm *wcs)
 {
   static const char *function = "datfix";

+  char orig_dateobs[72];
   char *dateobs;
   int  day, dd, hour = 0, jd, minute = 0, month, msec, n4, year;
   double mjdobs, sec = 0.0, t;
@@ -233,6 +234,7 @@ int datfix(struct wcsprm *wcs)
   err = &(wcs->err);

   dateobs = wcs->dateobs;
+  strncpy(orig_dateobs, dateobs, 72);
   if (dateobs[0] == '\0') {
     if (undefined(wcs->mjdobs)) {
      /* No date information was provided. */
@@ -271,8 +273,6 @@ int datfix(struct wcsprm *wcs)
           sprintf(dateobs+19, ".%.3d", msec%1000);
         }
       }
-
-      return FIXERR_SUCCESS;
     }

   } else {
@@ -378,7 +378,13 @@ int datfix(struct wcsprm *wcs)
     }
   }

-  return FIXERR_SUCCESS;
+  if (strncmp(orig_dateobs, dateobs, 72)) {
+    return wcserr_set(
+      WCSERR_SET(FIXERR_DATE_FIX),
+      "Fixed '%s' to '%s'", orig_dateobs, dateobs);
+  }
+
+  return FIXERR_NO_CHANGE;
 }

 /*--------------------------------------------------------------------------*/
@@ -542,11 +548,15 @@ int celfix(struct wcsprm *wcs)
 int spcfix(struct wcsprm *wcs)

 {
+  static const char *function = "spcfix";
+
   char ctype[9], specsys[9];
   int  i, status;
+  struct wcserr **err;

   /* Initialize if required. */
   if (wcs == 0x0) return FIXERR_NULL_POINTER;
+  err = &(wcs->err);
   if (wcs->flag != WCSSET) {
     if ((status = wcsset(wcs))) return status;
   }
@@ -570,13 +580,30 @@ int spcfix(struct wcsprm *wcs)
     return status;
   }

-  strcpy(wcs->ctype[i], ctype);
-  if (wcs->specsys[1] == '\0') strcpy(wcs->specsys, specsys);
+  if (strncmp(wcs->ctype[i], ctype, 9) ||
+      (wcs->specsys[1] == '\0' && strncmp(wcs->specsys, specsys, 9))) {
+    if (wcs->specsys[1] == '\0') {
+      strncpy(wcs->specsys, specsys, 9);
+      wcserr_set(
+        WCSERR_SET(FIXERR_SPC_UPDATE),
+        "Changed CTYPE%d from '%s' to '%s' and SPECSYS from '%s' to '%s'",
+        i+1, wcs->ctype[i], ctype, wcs->specsys, specsys);
+    } else {
+      wcserr_set(
+        WCSERR_SET(FIXERR_SPC_UPDATE),
+        "Changed CTYPE%d from '%s' to '%s'",
+        i+1, wcs->ctype[i], ctype);
+    }
+
+    strcpy(wcs->ctype[i], ctype);

-  wcsutil_null_fill(72, wcs->ctype[i]);
-  wcsutil_null_fill(72, wcs->specsys);
+    wcsutil_null_fill(72, wcs->ctype[i]);
+    wcsutil_null_fill(72, wcs->specsys);

-  return FIXERR_SUCCESS;
+    return FIXERR_SUCCESS;
+  }
+
+  return FIXERR_NO_CHANGE;
 }

 /*--------------------------------------------------------------------------*/
Index: C/wcsfix.h
===================================================================
--- C/wcsfix.h
+++ C/wcsfix.h
@@ -353,6 +353,8 @@ extern const char *wcsfix_errmsg[];
 #define cylfix_errmsg wcsfix_errmsg

 enum wcsfix_errmsg_enum {
+  FIXERR_DATE_FIX         = -4, /* The date formatting has been fixed up. */
+  FIXERR_SPC_UPDATE       = -3, /* Spectral axis type modified. */
   FIXERR_UNITS_ALIAS      = -2,	/* Units alias translation. */
   FIXERR_NO_CHANGE        = -1,	/* No change. */
   FIXERR_SUCCESS          =  0,	/* Success. */
