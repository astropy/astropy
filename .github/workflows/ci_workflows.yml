name: CI

on:
  push:
    branches:
    - main
    - 'v*'
    tags:
    - '*'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  ARCH_ON_CI: "normal"
  IS_CRON: "false"

jobs:
  initial_checks:
    name: Mandatory checks before CI
    runs-on: ubuntu-latest
    steps:
    - name: Check base branch
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const skip_label = 'skip-basebranch-check';
          const { default_branch: allowed_basebranch } = context.payload.repository;
          const pr = context.payload.pull_request;
          if (pr.user.login === 'meeseeksmachine') {
            core.info(`Base branch check is skipped since this is auto-backport by ${pr.user.login}`);
            return;
          }
          if (pr.labels.find(lbl => lbl.name === skip_label)) {
            core.info(`Base branch check is skipped due to the presence of ${skip_label} label`);
            return;
          }
          if (pr.base.ref !== allowed_basebranch) {
            core.setFailed(`PR opened against ${pr.base.ref}, not ${allowed_basebranch}`);
          } else {
            core.info(`PR opened correctly against ${allowed_basebranch}`);
          }

  tests:
    needs: [initial_checks]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      submodules: false
      coverage: codecov
      libraries: |
        apt:
          - language-pack-fr
          - tzdata
      envs: |
        # NOTE: this coverage test is needed for tests and code that
        #       run only with minimal dependencies.
        - name: Python 3.10 with minimal dependencies and full coverage
          linux: py310-test-cov

        # NOTE: In the build below we also check that tests do not open and
        # leave open any files. This has a performance impact on running the
        # tests, hence why it is not enabled by default.
        - name: Python 3.9 with all optional dependencies
          linux: py39-test-alldeps
          toxargs: -v --develop
          posargs: --open-files --run-slow

        - name: Python 3.8 with oldest supported version of all dependencies
          linux: py38-test-oldestdeps-alldeps-cov-clocale
          posargs: --remote-data=astropy

        - name: Python 3.9 with all optional dependencies (Windows)
          windows: py39-test-alldeps
          posargs: --durations=50

        - name: Python 3.9 with all optional dependencies (MacOS X)
          macos: py39-test-alldeps
          posargs: --durations=50 --run-slow

  allowed_failures:
    needs: [initial_checks]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      submodules: false
      coverage: codecov
      libraries: |
        apt:
          - language-pack-de
          - tzdata
          - libopenblas-dev  # To enable compiling scipy from source if a wheel dosen't exist
      envs: |
        - name: (Allowed Failure) Python 3.11 with remote data and dev version of key dependencies
          linux: py311-test-devdeps
          posargs: --remote-data=any

  parallel_and_32bit:
    name: 32-bit and parallel
    runs-on: ubuntu-latest
    needs: [initial_checks]
    container:
      image: quay.io/pypa/manylinux2014_i686:2022-04-03-da6ecb3
    steps:
    # TODO: Use newer checkout actions when https://github.com/actions/checkout/issues/334 fixed
    - name: Checkout code
      uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - name: Write configuration items to standard location to make sure they are ignored in parallel mode
      run: |
        mkdir -p $HOME/.astropy/config/
        printf "unicode_output = True\nmax_width = 500" > $HOME/.astropy/config/astropy.cfg
    # In addition to testing 32-bit, we also use the 3.8 builds to
    # test the ability to run the test suite in parallel.
    # Numpy is pinned to avoid building it from source for numpy 1.21.5
    - name: Install dependencies for Python 3.8
      run: /opt/python/cp38-cp38/bin/pip install tox
    - name: Run tests for Python 3.8
      run: /opt/python/cp38-cp38/bin/python -m tox -e py38-numpy120-test -- -n=4 --durations=50
    # We use the 3.8 build to check that running tests twice in a row in the
    # same Python session works without issues. This catches cases where
    # running the tests changes the module state permanently. Note that we
    # shouldn't also test the parallel build here since that enforces a degree
    # of isolation of tests which will interfere with what we are trying to do
    # here.
    # Numpy is pinned to avoid building it from source for numpy 1.21.5
    - name: Run tests for Python 3.8
      run: /opt/python/cp38-cp38/bin/python -m tox -e py38-numpy120-test-double
