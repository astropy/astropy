.. doctest-skip-all

.. _whatsnew-4.2:

**************************
What's New in Astropy 4.2?
**************************

Overview
========

Astropy 4.2 is a major release that ...  since
the 4.1.x series of releases.

In particular, this release includes:

* :ref:`whatsnew-4.2-cosmology`
* :ref:`whatsnew-4.2-time-perf-imp`
*

In addition to these major changes, Astropy v4.1 includes a large number of
smaller improvements and bug fixes, which are described in the
:ref:`changelog`. By the numbers:

* xxx issues have been closed since v4.1
* xxx pull requests have been merged since v4.1
* xxx distinct people have contributed code

.. _whatsnew-4.2-coordinates:

Transformations to AltAz are now much more precise
==================================================

Following advice from M. K. Brewer and comparisons with accurate comparison
samples, the implementations for the transformations to AltAz coordinates were
made much more precise (down to the milli-arcsec level).  To help this, the
``CIRS`` frame has gained an observer ``location`` attribute.

A True Equator and True Equinox frame
=====================================

A new equatorial coordinate frame has been introduced, with RA and Dec
measured with respect to the True Equator and Equinox (TETE). This frame is
commonly known as "apparent place" and is the correct frame for coordinates
returned from JPL Horizons.


.. _whatsnew-4.2-cosmology:

Planck 2018 is accepted and now the default cosmology
=====================================================

The accepted version of the Planck 2018 cosmological parameters has been included
and has become the default cosmology.  It is identical to the previous, preliminary
version (Planck18_arXiv_v2), which is deprecated and will be removed in a future release.

  >>> from astropy.cosmology import Planck18
  >>> Planck18.age(0)
  <Quantity 13.7868853 Gyr>

.. _whatsnew-4.2-time-perf-imp:

Time performance improvements
=============================

The performance for creating a ``Time`` object from a large array of
fixed-format string times was dramatically improved. For ISO and ISOT formats
the speed-up is a factor of 25 and for the year day-of-year format the speedup
is a factor of 50. This is done with a new C-based time string parser which can
also be used for custom user-defined Time formats. For details see
:ref:`time-fast-c-parser`.

In addition the performance for creating a scalar ``Time`` object in a epoch
format like ``unix``, ``unix_tai``, or ``cxcsec`` was improved by a factor of 4.

Full change log
===============

To see a detailed list of all changes in version v4.2, including changes in
API, please see the :ref:`changelog`.


Renamed/removed functionality
=============================
